{"version":3,"sources":["components/Movies/MovieDetailsPage/MovieDetailsPage.js"],"names":["Reviews","React","lazy","Cast","MovieDetailsPage","state","movie","reviews","actors","id","componentDidMount","a","async","services","getDetailsById","props","match","params","then","data","setState","handleCast","getActorsById","handleReviews","getReviewsById","this","length","src","poster_path","alt","original_title","Math","round","popularity","overview","genres","map","elem","key","name","to","onClick","fallback","exact","path","render","Component"],"mappings":"6OAGMA,EAAUC,IAAMC,MAAK,kBAAM,gCAC3BC,EAAOF,IAAMC,MAAK,kBAAM,gCAGxBE,E,2MACJC,MAAQ,CACNC,MAAO,GACPC,QAAS,GACTC,OAAQ,GACRC,GAAI,M,EAGNC,kBAAoB,oBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACZE,IAASC,eAAe,EAAKC,MAAMC,MAAMC,OAAOR,IAAIS,MAAK,SAAAC,GAC7D,EAAKC,SAAS,CAAEd,MAAOa,EAAKA,KAAMV,GAAI,EAAKM,MAAMC,MAAMC,OAAOR,SAF9C,sC,EAOpBY,WAAa,WACXR,IAASS,cAAc,EAAKjB,MAAMI,IAAIS,MAAK,SAAAC,GACzC,EAAKC,SAAS,CAAEZ,OAAQW,EAAKA,W,EAIjCI,cAAgB,WACdV,IAASW,eAAe,EAAKnB,MAAMI,IAAIS,MAAK,SAAAC,GAC1C,EAAKC,SAAS,CAAEb,QAASY,EAAKA,W,wEAIxB,IAAD,OACCb,EAAUmB,KAAKpB,MAAfC,MACR,OACmB,IAAjBA,EAAMoB,QACJ,oCACE,kBAAC,IAAD,KACE,yBACEC,IAAG,UApCK,oCAoCL,OAAqBrB,EAAMsB,aAC9BC,IAAI,kBAEN,4BAAKvB,EAAMwB,gBACX,0CAAgBC,KAAKC,MAAM1B,EAAM2B,YAAjC,WACA,yCACA,2BAAI3B,EAAM4B,UACV,uCAEA,4BAC2B,IAAxB5B,EAAM6B,OAAOT,QACZpB,EAAM6B,OAAOC,KAAI,SAAAC,GAAI,OAAI,wBAAIC,IAAKD,EAAK5B,IAAK4B,EAAKE,UAErD,6BACA,sDACA,kBAAC,IAAD,CAAMC,GAAE,kBAAalC,EAAMG,GAAnB,SAA8BgC,QAAShB,KAAKJ,YAApD,QAGA,kBAAC,IAAD,CACEmB,GAAE,kBAAalC,EAAMG,GAAnB,YACFgC,QAAShB,KAAKF,eAFhB,WAMA,6BACA,kBAAC,IAAD,KACE,kBAAC,WAAD,CAAUmB,SAAU,qFAClB,kBAAC,IAAD,CACEC,OAAK,EACLC,KAAK,mBACLC,OAAQ,kBAAM,kBAAC1C,EAAD,CAAMK,OAAQ,EAAKH,MAAMG,YAEzC,kBAAC,IAAD,CACEmC,OAAK,EACLC,KAAK,sBACLC,OAAQ,kBAAM,kBAAC7C,EAAD,CAASO,QAAS,EAAKF,MAAME,qB,GArE9BuC,aAgFhB1C","file":"static/js/5.669bbe19.chunk.js","sourcesContent":["import React, { Component, Suspense } from \"react\";\r\nimport services from \"../../services/services\";\r\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\r\nconst Reviews = React.lazy(() => import(\"../Reviews/Reviews\"));\r\nconst Cast = React.lazy(() => import(\"../Cast/Cast\"));\r\nconst defaultImgURL = \"https://image.tmdb.org/t/p/w300/\";\r\n\r\nclass MovieDetailsPage extends Component {\r\n  state = {\r\n    movie: [],\r\n    reviews: [],\r\n    actors: [],\r\n    id: null\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    await services.getDetailsById(this.props.match.params.id).then(data => {\r\n      this.setState({ movie: data.data, id: this.props.match.params.id });\r\n    });\r\n    // this.props.history.push(`/movies/${this.props.location.state.id}`);\r\n  };\r\n\r\n  handleCast = () => {\r\n    services.getActorsById(this.state.id).then(data => {\r\n      this.setState({ actors: data.data });\r\n    });\r\n  };\r\n\r\n  handleReviews = () => {\r\n    services.getReviewsById(this.state.id).then(data => {\r\n      this.setState({ reviews: data.data });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { movie } = this.state;\r\n    return (\r\n      movie.length !== 0 && (\r\n        <>\r\n          <BrowserRouter>\r\n            <img\r\n              src={`${defaultImgURL}${movie.poster_path}`}\r\n              alt=\"movie-posters\"\r\n            />\r\n            <h1>{movie.original_title}</h1>\r\n            <p>User score: {Math.round(movie.popularity)} points</p>\r\n            <h2>Overview:</h2>\r\n            <p>{movie.overview}</p>\r\n            <h2>Genres:</h2>\r\n\r\n            <ul>\r\n              {movie.genres.length !== 0 &&\r\n                movie.genres.map(elem => <li key={elem.id}>{elem.name}</li>)}\r\n            </ul>\r\n            <hr />\r\n            <h3>Additional information</h3>\r\n            <Link to={`/movies/${movie.id}/cast`} onClick={this.handleCast}>\r\n              Cast\r\n            </Link>\r\n            <Link\r\n              to={`/movies/${movie.id}/reviews`}\r\n              onClick={this.handleReviews}\r\n            >\r\n              Reviews\r\n            </Link>\r\n            <hr />\r\n            <Switch>\r\n              <Suspense fallback={<div>Загрузка...</div>}>\r\n                <Route\r\n                  exact\r\n                  path=\"/movies/:id/cast\"\r\n                  render={() => <Cast actors={this.state.actors} />}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/movies/:id/reviews\"\r\n                  render={() => <Reviews reviews={this.state.reviews} />}\r\n                />\r\n              </Suspense>\r\n            </Switch>\r\n          </BrowserRouter>\r\n        </>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieDetailsPage;\r\n"],"sourceRoot":""}